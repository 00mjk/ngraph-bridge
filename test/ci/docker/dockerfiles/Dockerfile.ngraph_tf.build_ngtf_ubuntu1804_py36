# ==============================================================================
#  Copyright 2018-2020 Intel Corporation
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
# ==============================================================================

# Environment to build and unit-test ngraph-tensorflow-bridge

FROM ubuntu:18.04

ARG HTTP_PROXY
ARG HTTPS_PROXY
ARG NO_PROXY

ENV http_proxy=${HTTP_PROXY}
ENV https_proxy=${HTTPS_PROXY}
ENV no_proxy=${NO_PROXY}

# Default python environment is python 3, thus python3-pip and virtualenv
# Default gcc 7.3 for ubuntu 18.04
# python3-dev is needed for TensorFlow build
# git is needed to clone tensorflow repository
# unzip and wget are needed for installing bazel
# sudo is required for installing the TF wheel into /usr/local/...
# zlib1g, zlib1g-dev and bash-completion are required by bazel install
# zip and golang-go are needed to run TensorFlow tests
# curl and locate are needed by Tensorflow's configure command
# clang-format-3.9 is needed for code-style checks

RUN apt-get update &&  apt-get install -y \
  bash-completion \
  build-essential \
  clang-format-3.9 \
  cmake \
  curl \
  git \
  libbz2-dev \
  libffi-dev \
  liblzma-dev \
  libreadline-dev \
  libsqlite3-dev \
  libssl-dev \
  locate \
  netcat \
  sudo \
  unzip \
  vim \
  wget \
  xz-utils \
  zip \
  zlib1g \
  zlib1g-dev


# Report which gcc and g++ versions are present
RUN which gcc && gcc --version || true
RUN which c++ && c++ --version || true

# The "locate" command uses a prepopulated index.  If this index is not built,
# then "locate" will find absolutely nothing.  In Tensorflow's configure,
# this manifests itself as a silent failure of the configure script to run to
# completion.  Therefore, updatedb MUST BE RUN to provide an index for "locate".
RUN updatedb

# We include openjdk-8-jdk
RUN apt-get update && apt-get install -y openjdk-8-jdk

# This bazel version works with current TF
ARG BAZEL_VERSION=0.25.2
RUN wget --no-verbose -c https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel_${BAZEL_VERSION}-linux-x86_64.deb
RUN dpkg -i bazel_${BAZEL_VERSION}-linux-x86_64.deb || true

WORKDIR /home/appuser
ENV PYENV_ROOT=/home/appuser/.pyenv
ENV PATH=${PYENV_ROOT}/bin:$PATH
RUN  mkdir -p .cache/bazel && chmod -R 777 .cache
RUN echo 'export PYENV_ROOT="/home/appuser/.pyenv"' >> /etc/profile
RUN echo 'export PATH="$PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH"' >> /etc/profile
RUN curl https://pyenv.run | bash -l
RUN chmod 777 /home/appuser/.pyenv
RUN echo 'eval "$(pyenv init -)"' >> /etc/profile
RUN echo 'eval "$(pyenv virtualenv-init -)"' >> /etc/profile
RUN pyenv install 3.6.9
RUN chmod 777 /home/appuser/.pyenv/shims
RUN . /etc/profile && \
  pyenv virtualenv 3.6.9 tensorflow && \
  pyenv activate tensorflow && \
  pip install --upgrade pip==19.3.1 && \
  pip install six numpy wheel setuptools mock 'future>=0.17.1' && \
  pip install keras_applications --no-deps && \
  pip install keras_preprocessing --no-deps
